//--------------------------------------
//--- 010 Editor v4.0.1 Binary Template
//
// File:
// Author:
// Revision:
// Purpose:
//--------------------------------------
//#include "ED6_common_define.bt.h"
#define ED6_FC		0x01
//#define ED6_SC		0x02
//#define ED6_3RD		0x04
//#define ED_ZERO		0x08
//#define ED_AO		0x10
//local int ED6_NO = ED6_SC;
#include "ED6_common.bt.h"

typedef struct
{
    local int           addrStart = FTell();
// 0
    ushort              SoldierNo;                  // 我方0-7，敌方8-15，支援16-19，待分身20-21
    ubyte               unknownFlags1 <format=hex, hidden=true>;
	ubyte				Flags <format=hex>;                      // 10 敌方 40 己方 ...
	ubyte				DeathFlags <format=hex>;                 // 02 不参与战场胜利判定 04 死后留在战场上
	ubyte				UnderAttackFlags <format=hex>;           // 08 Resist ATDelay 02 不被击退 01 被攻击不转身(3D)  10 无法被攻击到  20 强制miss
	FSkip(4);
    ushort              CharacterIndex;
    //FSkip(2);
    //ushort              ATActTime;  // AT条动多少次，初始为0
	FileIndex			SYFileIndex;
	FileIndex			MSFileIndex;
	FileIndex			ASFileIndex;    
/* 
	ubyte				DUMMY_STRUCT_00[438];
    ubyte               attackStatus[8];    // 最近八次的攻击与被攻击情况 队列。从AT=0开始累计，下次AT=0时结果后移，位置0清空。
                                            // 01 掉血大于0; 02 发动攻击命中掉血; 08 掉血大于2000; 10 受到物理攻击命中掉血
	ubyte				DUMMY_STRUCT_001[51];    
    ubyte               IsLastFightMissToSoldierNo[16];
    ubyte               IsLastFightTargetToSoldierNo[16];
	ubyte				DUMMY_STRUCT_01[11] <hidden=true>;   
*/ 
//	ubyte				DUMMY_STRUCT_01[528] <hidden=true>; 
	FSeek(addrStart + 0x1D0);
    local int           addrHP = FTell();
    ED6_CHARACTER_STATUS    Character_Status_basic;    // normal难度基础值

    ED6_CHARACTER_STATUS    Character_Status_sum;      // 算上难度、装备、回路
	ushort				MoveSPD;                // 移动速度，我方人员也从ms文件中读取
    ushort              MoveAfterAttack;        // 从ms文件中读取
    CONDITION           Condition[29];
	FSkip(24);
    int					AT;
    int					AT2;
	FSkip(6);
	ushort				AIType;
	FSkip(2);

//	uint				EXPGet;                     // 战斗胜利 结算经验前暂存
	ushort				DropIndex1;                 // 掉落物 物品代码
	ushort				DropIndex2;
	ubyte				DropProbability1;           // 掉落概率
	ubyte				DropProbability2;    
	ubyte				Sex; 
    ubyte               DisplayHighLevelArtsAttResistance <hidden=true>;      
                                                    // 是否开启时空幻有效率显示，0/8 不开启 1/9 开启，应该是标志位，可能含有更多信息

//	ubyte				DUMMY_STRUCT_021[10] <hidden=true>;
	ushort				Equip[5];                   // 装备
	ushort				Orb[6];                     // 回路   7个 
	ED6_AI_INFO	        NormalAttack;
	ED6_AI_INFO         Art[80];
	ED6_AI_INFO         Craft[10];
	ED6_AI_INFO         SCraft[4];
//    ED6_AI_INFO         SupportCraft[3]; 
    CraftLastUsed_INFO	CraftLastUsed;
	ArrayBytes			fleeParameter(4);

// 15条战技定义共512字节，（说明256 名字32）共288x
    local uint          addrCraftDefinition = FTell();
    ED6_CRAFT_DEFINITION_GROUP  CraftDefinition;

	FSeek(addrStart + 0x21C4);
	ubyte				Sepith[7];                  // 掉落耀晶片
	FSkip(1);
	ushort				EXPGet;                     // 战斗胜利 结算经验前暂存
	FSkip(2);
	ushort				ArtsAttResistance[4];       // 七曜属性有效率

	FSeek(addrStart + 0x225C);
	RESISTANCE			Resistance;

	FSeek(addrStart + 0x22A8);
    string              CharacterIntro;

	//FSeek(ProcessHeapToLocalAddress(0x208*SoldierNo + 0x5CB950));
	FSeek(ProcessHeapToLocalAddress(ReadUInt(addrHP-8)));
	string				CharacterName;

    FSeek(addrStart + chrBattleInfSize);
} ED6_CHARACTER_BATTLE_INF <read = ReadMSFileIndex>;

string ReadMSFileIndex(ED6_CHARACTER_BATTLE_INF &a)
{
	return	a.MSFileIndex.display + " " + a.CharacterName;
}


local uint addrEXE = 0x400000;
//local uint addrT_name = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(addrEXE + 0x29ED800)));
//local uint addrT_item = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(addrEXE + 0x29ED804)));
local uint addrT_magic = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(0x1941780)));
local uint addrT_btset1 = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(0x19411DC)));
local uint addrT_status = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(0x1941308)));
//local uint addrT_btset1 = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(addrEXE + 0x2B2B424)));
//local uint addrT_btset2 = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(addrEXE + 0x2B2B7DC)));
//local uint addrDIR21 = ProcessHeapToLocalAddress(ReadUInt(ProcessHeapToLocalAddress(0x21*4 + 0x2CAD950)));

#include "t_magic.bt.h"
//local uint		addrT_magic = 0;	// 内存编辑用
FSeek(addrT_magic);
T_magic         magicTable;

#include "FC_T_BTSET.bt.h"
FSeek(addrT_btset1);
T_btset         btSetTable1;

#include "3rd_t_status.bt.h"
FSeek(addrT_status);
T_status  statusTable;

//[0x5280F0+0x5D200] = [5852F0h]
/*
#include "3rd_T_BTSET.bt.h"
FSeek(addrT_btset1);
T_btset         btSetTable1;
FSeek(addrT_btset2);
T_btset         btSetTable2;
*/

	local uint			addrChr0 = ProcessHeapToLocalAddress(0x5A58D0);
    local int           i = 0, j;
    local ushort        chrBattleInfSize = 0x23C8;
    FSeek(addrChr0);
    for( j = 0; j < 17; j++ )
    {
        if( ReadUInt(addrChr0 + chrBattleInfSize*j + 0xC) == 0 && 
            ReadUInt(addrChr0 + chrBattleInfSize*j + 0x10) == 0 &&
            ReadUInt(addrChr0 + chrBattleInfSize*j + 0x14) == 0  )
                ED6_CHARACTER_BATTLE_INF    ED6_character_battle_inf <hidden=true>;
        else
                ED6_CHARACTER_BATTLE_INF    ED6_character_battle_inf;
    }


FSeek(ProcessHeapToLocalAddress(0x16FA200));
STATUS			Status[32];